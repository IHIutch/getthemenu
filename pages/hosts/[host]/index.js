import React from 'react'
import Head from 'next/head'
import { useRouter } from 'next/router'
import NextLink from 'next/link'
import { apiGetRestaurants } from '@/controllers/restaurants'
import {
  Box,
  Button,
  ButtonGroup,
  Center,
  Heading,
  Link,
  Stack,
  Text,
} from '@chakra-ui/react'
import { apiGetMenus } from '@/controllers/menus'
import { apiGetMenuItems } from '@/controllers/menuItems'

export default function RestaurantHome({ host, restaurant, menus, menuItems }) {
  const router = useRouter()
  const { query } = router
  console.log({ host, query })

  return host ? (
    <>
      <Head>
        <title>{restaurant?.name}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Heading as="h1">Host: {host}</Heading>
      <Stack>
        <Box>
          <Heading as="h2" fontSize="2xl">
            Restaurant
          </Heading>
          <Text as="pre">{JSON.stringify(restaurant, null, 2)}</Text>
        </Box>
        <Box>
          <Heading as="h2" fontSize="2xl">
            Menus
          </Heading>
          <Text as="pre">{JSON.stringify(menus, null, 2)}</Text>
        </Box>
        <Box>
          <Heading as="h2" fontSize="2xl">
            Menu Items
          </Heading>
          <Text as="pre">{JSON.stringify(menuItems, null, 2)}</Text>
        </Box>
      </Stack>
    </>
  ) : (
    <>
      <Head>
        <title>GetTheMenu</title>
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Center h="100%">
        <Box>
          <Heading as="h1">GetTheMenu</Heading>
          <ButtonGroup>
            <NextLink href="/register" passHref>
              <Button as={Link} colorScheme="blue">
                Register
              </Button>
            </NextLink>
            <NextLink href="/login" passHref>
              <Button as={Link}>Log In</Button>
            </NextLink>
          </ButtonGroup>
        </Box>
      </Center>
    </>
  )
}

export async function getServerSideProps(context) {
  // console.log('getServerSideProps', context)
  const host =
    context.params.host !== 'getthemenu.io' &&
    context.params.host !== 'localhost'
      ? context.params.host.split('.')[0]
      : ''

  let restaurants, restaurant, menus, menuItems
  if (host) {
    restaurants = await apiGetRestaurants({
      subdomain: host,
    })
    restaurant = restaurants[0]
    menus = await apiGetMenus({
      restaurantId: restaurant.id,
    })
    menuItems = await apiGetMenuItems({
      restaurantId: restaurant.id,
    })
  }

  return {
    props: {
      host,
      restaurant: restaurant || '',
      menus: menus || '',
      menuItems: menuItems || '',
    },
    // revalidate: 10,
  }
}

// export async function getStaticPaths() {
//   const restaurants = await apiGetRestaurants()
//   const paths = restaurants.map((restaurant) => ({
//     params: {
//       host: `${restaurant.subdomain}.getthemenu.io`,
//     },
//   }))

//   return {
//     paths,
//     fallback: 'blocking',
//   }
// }
