/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as TermsOfUseRouteImport } from './routes/terms-of-use'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as RegisterRouteImport } from './routes/register'
import { Route as PrivacyPolicyRouteImport } from './routes/privacy-policy'
import { Route as LogoutRouteImport } from './routes/logout'
import { Route as LoginRouteImport } from './routes/login'
import { Route as AuthedRouteImport } from './routes/_authed'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as AuthedAccountRouteImport } from './routes/_authed/account'
import { Route as AuthedPublicIdRouteImport } from './routes/_authed/$publicId'
import { Route as AuthedOnboardingSetupRouteImport } from './routes/_authed/onboarding.setup'
import { Route as AuthedOnboardingDomainRouteImport } from './routes/_authed/onboarding.domain'
import { Route as AuthedPublicIdRestaurantRouteImport } from './routes/_authed/$publicId.restaurant'
import { Route as AuthedPublicIdDashboardRouteImport } from './routes/_authed/$publicId.dashboard'
import { Route as AuthedPublicIdDashboardIndexRouteImport } from './routes/_authed/$publicId.dashboard.index'
import { Route as AuthedPublicIdMenuMenuPublicIdRouteImport } from './routes/_authed/$publicId.menu.$menuPublicId'
import { Route as AuthedPublicIdMenuMenuPublicIdIndexRouteImport } from './routes/_authed/$publicId.menu.$menuPublicId.index'
import { Route as AuthedPublicIdMenuMenuPublicIdEditRouteImport } from './routes/_authed/$publicId.menu.$menuPublicId.edit'
import { ServerRoute as ApiTrpcSplatServerRouteImport } from './routes/api/trpc.$'

const rootServerRouteImport = createServerRootRoute()

const TermsOfUseRoute = TermsOfUseRouteImport.update({
  id: '/terms-of-use',
  path: '/terms-of-use',
  getParentRoute: () => rootRouteImport,
} as any)
const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const RegisterRoute = RegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any)
const PrivacyPolicyRoute = PrivacyPolicyRouteImport.update({
  id: '/privacy-policy',
  path: '/privacy-policy',
  getParentRoute: () => rootRouteImport,
} as any)
const LogoutRoute = LogoutRouteImport.update({
  id: '/logout',
  path: '/logout',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthedRoute = AuthedRouteImport.update({
  id: '/_authed',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthedAccountRoute = AuthedAccountRouteImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => AuthedRoute,
} as any)
const AuthedPublicIdRoute = AuthedPublicIdRouteImport.update({
  id: '/$publicId',
  path: '/$publicId',
  getParentRoute: () => AuthedRoute,
} as any)
const AuthedOnboardingSetupRoute = AuthedOnboardingSetupRouteImport.update({
  id: '/onboarding/setup',
  path: '/onboarding/setup',
  getParentRoute: () => AuthedRoute,
} as any)
const AuthedOnboardingDomainRoute = AuthedOnboardingDomainRouteImport.update({
  id: '/onboarding/domain',
  path: '/onboarding/domain',
  getParentRoute: () => AuthedRoute,
} as any)
const AuthedPublicIdRestaurantRoute =
  AuthedPublicIdRestaurantRouteImport.update({
    id: '/restaurant',
    path: '/restaurant',
    getParentRoute: () => AuthedPublicIdRoute,
  } as any)
const AuthedPublicIdDashboardRoute = AuthedPublicIdDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthedPublicIdRoute,
} as any)
const AuthedPublicIdDashboardIndexRoute =
  AuthedPublicIdDashboardIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthedPublicIdDashboardRoute,
  } as any)
const AuthedPublicIdMenuMenuPublicIdRoute =
  AuthedPublicIdMenuMenuPublicIdRouteImport.update({
    id: '/menu/$menuPublicId',
    path: '/menu/$menuPublicId',
    getParentRoute: () => AuthedPublicIdRoute,
  } as any)
const AuthedPublicIdMenuMenuPublicIdIndexRoute =
  AuthedPublicIdMenuMenuPublicIdIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthedPublicIdMenuMenuPublicIdRoute,
  } as any)
const AuthedPublicIdMenuMenuPublicIdEditRoute =
  AuthedPublicIdMenuMenuPublicIdEditRouteImport.update({
    id: '/edit',
    path: '/edit',
    getParentRoute: () => AuthedPublicIdMenuMenuPublicIdRoute,
  } as any)
const ApiTrpcSplatServerRoute = ApiTrpcSplatServerRouteImport.update({
  id: '/api/trpc/$',
  path: '/api/trpc/$',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/logout': typeof LogoutRoute
  '/privacy-policy': typeof PrivacyPolicyRoute
  '/register': typeof RegisterRoute
  '/signup': typeof SignupRoute
  '/terms-of-use': typeof TermsOfUseRoute
  '/$publicId': typeof AuthedPublicIdRouteWithChildren
  '/account': typeof AuthedAccountRoute
  '/auth/login': typeof AuthLoginRoute
  '/$publicId/dashboard': typeof AuthedPublicIdDashboardRouteWithChildren
  '/$publicId/restaurant': typeof AuthedPublicIdRestaurantRoute
  '/onboarding/domain': typeof AuthedOnboardingDomainRoute
  '/onboarding/setup': typeof AuthedOnboardingSetupRoute
  '/$publicId/menu/$menuPublicId': typeof AuthedPublicIdMenuMenuPublicIdRouteWithChildren
  '/$publicId/dashboard/': typeof AuthedPublicIdDashboardIndexRoute
  '/$publicId/menu/$menuPublicId/edit': typeof AuthedPublicIdMenuMenuPublicIdEditRoute
  '/$publicId/menu/$menuPublicId/': typeof AuthedPublicIdMenuMenuPublicIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/logout': typeof LogoutRoute
  '/privacy-policy': typeof PrivacyPolicyRoute
  '/register': typeof RegisterRoute
  '/signup': typeof SignupRoute
  '/terms-of-use': typeof TermsOfUseRoute
  '/$publicId': typeof AuthedPublicIdRouteWithChildren
  '/account': typeof AuthedAccountRoute
  '/auth/login': typeof AuthLoginRoute
  '/$publicId/restaurant': typeof AuthedPublicIdRestaurantRoute
  '/onboarding/domain': typeof AuthedOnboardingDomainRoute
  '/onboarding/setup': typeof AuthedOnboardingSetupRoute
  '/$publicId/dashboard': typeof AuthedPublicIdDashboardIndexRoute
  '/$publicId/menu/$menuPublicId/edit': typeof AuthedPublicIdMenuMenuPublicIdEditRoute
  '/$publicId/menu/$menuPublicId': typeof AuthedPublicIdMenuMenuPublicIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authed': typeof AuthedRouteWithChildren
  '/login': typeof LoginRoute
  '/logout': typeof LogoutRoute
  '/privacy-policy': typeof PrivacyPolicyRoute
  '/register': typeof RegisterRoute
  '/signup': typeof SignupRoute
  '/terms-of-use': typeof TermsOfUseRoute
  '/_authed/$publicId': typeof AuthedPublicIdRouteWithChildren
  '/_authed/account': typeof AuthedAccountRoute
  '/auth/login': typeof AuthLoginRoute
  '/_authed/$publicId/dashboard': typeof AuthedPublicIdDashboardRouteWithChildren
  '/_authed/$publicId/restaurant': typeof AuthedPublicIdRestaurantRoute
  '/_authed/onboarding/domain': typeof AuthedOnboardingDomainRoute
  '/_authed/onboarding/setup': typeof AuthedOnboardingSetupRoute
  '/_authed/$publicId/menu/$menuPublicId': typeof AuthedPublicIdMenuMenuPublicIdRouteWithChildren
  '/_authed/$publicId/dashboard/': typeof AuthedPublicIdDashboardIndexRoute
  '/_authed/$publicId/menu/$menuPublicId/edit': typeof AuthedPublicIdMenuMenuPublicIdEditRoute
  '/_authed/$publicId/menu/$menuPublicId/': typeof AuthedPublicIdMenuMenuPublicIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/logout'
    | '/privacy-policy'
    | '/register'
    | '/signup'
    | '/terms-of-use'
    | '/$publicId'
    | '/account'
    | '/auth/login'
    | '/$publicId/dashboard'
    | '/$publicId/restaurant'
    | '/onboarding/domain'
    | '/onboarding/setup'
    | '/$publicId/menu/$menuPublicId'
    | '/$publicId/dashboard/'
    | '/$publicId/menu/$menuPublicId/edit'
    | '/$publicId/menu/$menuPublicId/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/logout'
    | '/privacy-policy'
    | '/register'
    | '/signup'
    | '/terms-of-use'
    | '/$publicId'
    | '/account'
    | '/auth/login'
    | '/$publicId/restaurant'
    | '/onboarding/domain'
    | '/onboarding/setup'
    | '/$publicId/dashboard'
    | '/$publicId/menu/$menuPublicId/edit'
    | '/$publicId/menu/$menuPublicId'
  id:
    | '__root__'
    | '/'
    | '/_authed'
    | '/login'
    | '/logout'
    | '/privacy-policy'
    | '/register'
    | '/signup'
    | '/terms-of-use'
    | '/_authed/$publicId'
    | '/_authed/account'
    | '/auth/login'
    | '/_authed/$publicId/dashboard'
    | '/_authed/$publicId/restaurant'
    | '/_authed/onboarding/domain'
    | '/_authed/onboarding/setup'
    | '/_authed/$publicId/menu/$menuPublicId'
    | '/_authed/$publicId/dashboard/'
    | '/_authed/$publicId/menu/$menuPublicId/edit'
    | '/_authed/$publicId/menu/$menuPublicId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthedRoute: typeof AuthedRouteWithChildren
  LoginRoute: typeof LoginRoute
  LogoutRoute: typeof LogoutRoute
  PrivacyPolicyRoute: typeof PrivacyPolicyRoute
  RegisterRoute: typeof RegisterRoute
  SignupRoute: typeof SignupRoute
  TermsOfUseRoute: typeof TermsOfUseRoute
  AuthLoginRoute: typeof AuthLoginRoute
}
export interface FileServerRoutesByFullPath {
  '/api/trpc/$': typeof ApiTrpcSplatServerRoute
}
export interface FileServerRoutesByTo {
  '/api/trpc/$': typeof ApiTrpcSplatServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/trpc/$': typeof ApiTrpcSplatServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/trpc/$'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/trpc/$'
  id: '__root__' | '/api/trpc/$'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiTrpcSplatServerRoute: typeof ApiTrpcSplatServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/terms-of-use': {
      id: '/terms-of-use'
      path: '/terms-of-use'
      fullPath: '/terms-of-use'
      preLoaderRoute: typeof TermsOfUseRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/privacy-policy': {
      id: '/privacy-policy'
      path: '/privacy-policy'
      fullPath: '/privacy-policy'
      preLoaderRoute: typeof PrivacyPolicyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/logout': {
      id: '/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof LogoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authed': {
      id: '/_authed'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authed/account': {
      id: '/_authed/account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AuthedAccountRouteImport
      parentRoute: typeof AuthedRoute
    }
    '/_authed/$publicId': {
      id: '/_authed/$publicId'
      path: '/$publicId'
      fullPath: '/$publicId'
      preLoaderRoute: typeof AuthedPublicIdRouteImport
      parentRoute: typeof AuthedRoute
    }
    '/_authed/onboarding/setup': {
      id: '/_authed/onboarding/setup'
      path: '/onboarding/setup'
      fullPath: '/onboarding/setup'
      preLoaderRoute: typeof AuthedOnboardingSetupRouteImport
      parentRoute: typeof AuthedRoute
    }
    '/_authed/onboarding/domain': {
      id: '/_authed/onboarding/domain'
      path: '/onboarding/domain'
      fullPath: '/onboarding/domain'
      preLoaderRoute: typeof AuthedOnboardingDomainRouteImport
      parentRoute: typeof AuthedRoute
    }
    '/_authed/$publicId/restaurant': {
      id: '/_authed/$publicId/restaurant'
      path: '/restaurant'
      fullPath: '/$publicId/restaurant'
      preLoaderRoute: typeof AuthedPublicIdRestaurantRouteImport
      parentRoute: typeof AuthedPublicIdRoute
    }
    '/_authed/$publicId/dashboard': {
      id: '/_authed/$publicId/dashboard'
      path: '/dashboard'
      fullPath: '/$publicId/dashboard'
      preLoaderRoute: typeof AuthedPublicIdDashboardRouteImport
      parentRoute: typeof AuthedPublicIdRoute
    }
    '/_authed/$publicId/dashboard/': {
      id: '/_authed/$publicId/dashboard/'
      path: '/'
      fullPath: '/$publicId/dashboard/'
      preLoaderRoute: typeof AuthedPublicIdDashboardIndexRouteImport
      parentRoute: typeof AuthedPublicIdDashboardRoute
    }
    '/_authed/$publicId/menu/$menuPublicId': {
      id: '/_authed/$publicId/menu/$menuPublicId'
      path: '/menu/$menuPublicId'
      fullPath: '/$publicId/menu/$menuPublicId'
      preLoaderRoute: typeof AuthedPublicIdMenuMenuPublicIdRouteImport
      parentRoute: typeof AuthedPublicIdRoute
    }
    '/_authed/$publicId/menu/$menuPublicId/': {
      id: '/_authed/$publicId/menu/$menuPublicId/'
      path: '/'
      fullPath: '/$publicId/menu/$menuPublicId/'
      preLoaderRoute: typeof AuthedPublicIdMenuMenuPublicIdIndexRouteImport
      parentRoute: typeof AuthedPublicIdMenuMenuPublicIdRoute
    }
    '/_authed/$publicId/menu/$menuPublicId/edit': {
      id: '/_authed/$publicId/menu/$menuPublicId/edit'
      path: '/edit'
      fullPath: '/$publicId/menu/$menuPublicId/edit'
      preLoaderRoute: typeof AuthedPublicIdMenuMenuPublicIdEditRouteImport
      parentRoute: typeof AuthedPublicIdMenuMenuPublicIdRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/trpc/$': {
      id: '/api/trpc/$'
      path: '/api/trpc/$'
      fullPath: '/api/trpc/$'
      preLoaderRoute: typeof ApiTrpcSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface AuthedPublicIdDashboardRouteChildren {
  AuthedPublicIdDashboardIndexRoute: typeof AuthedPublicIdDashboardIndexRoute
}

const AuthedPublicIdDashboardRouteChildren: AuthedPublicIdDashboardRouteChildren =
  {
    AuthedPublicIdDashboardIndexRoute: AuthedPublicIdDashboardIndexRoute,
  }

const AuthedPublicIdDashboardRouteWithChildren =
  AuthedPublicIdDashboardRoute._addFileChildren(
    AuthedPublicIdDashboardRouteChildren,
  )

interface AuthedPublicIdMenuMenuPublicIdRouteChildren {
  AuthedPublicIdMenuMenuPublicIdEditRoute: typeof AuthedPublicIdMenuMenuPublicIdEditRoute
  AuthedPublicIdMenuMenuPublicIdIndexRoute: typeof AuthedPublicIdMenuMenuPublicIdIndexRoute
}

const AuthedPublicIdMenuMenuPublicIdRouteChildren: AuthedPublicIdMenuMenuPublicIdRouteChildren =
  {
    AuthedPublicIdMenuMenuPublicIdEditRoute:
      AuthedPublicIdMenuMenuPublicIdEditRoute,
    AuthedPublicIdMenuMenuPublicIdIndexRoute:
      AuthedPublicIdMenuMenuPublicIdIndexRoute,
  }

const AuthedPublicIdMenuMenuPublicIdRouteWithChildren =
  AuthedPublicIdMenuMenuPublicIdRoute._addFileChildren(
    AuthedPublicIdMenuMenuPublicIdRouteChildren,
  )

interface AuthedPublicIdRouteChildren {
  AuthedPublicIdDashboardRoute: typeof AuthedPublicIdDashboardRouteWithChildren
  AuthedPublicIdRestaurantRoute: typeof AuthedPublicIdRestaurantRoute
  AuthedPublicIdMenuMenuPublicIdRoute: typeof AuthedPublicIdMenuMenuPublicIdRouteWithChildren
}

const AuthedPublicIdRouteChildren: AuthedPublicIdRouteChildren = {
  AuthedPublicIdDashboardRoute: AuthedPublicIdDashboardRouteWithChildren,
  AuthedPublicIdRestaurantRoute: AuthedPublicIdRestaurantRoute,
  AuthedPublicIdMenuMenuPublicIdRoute:
    AuthedPublicIdMenuMenuPublicIdRouteWithChildren,
}

const AuthedPublicIdRouteWithChildren = AuthedPublicIdRoute._addFileChildren(
  AuthedPublicIdRouteChildren,
)

interface AuthedRouteChildren {
  AuthedPublicIdRoute: typeof AuthedPublicIdRouteWithChildren
  AuthedAccountRoute: typeof AuthedAccountRoute
  AuthedOnboardingDomainRoute: typeof AuthedOnboardingDomainRoute
  AuthedOnboardingSetupRoute: typeof AuthedOnboardingSetupRoute
}

const AuthedRouteChildren: AuthedRouteChildren = {
  AuthedPublicIdRoute: AuthedPublicIdRouteWithChildren,
  AuthedAccountRoute: AuthedAccountRoute,
  AuthedOnboardingDomainRoute: AuthedOnboardingDomainRoute,
  AuthedOnboardingSetupRoute: AuthedOnboardingSetupRoute,
}

const AuthedRouteWithChildren =
  AuthedRoute._addFileChildren(AuthedRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthedRoute: AuthedRouteWithChildren,
  LoginRoute: LoginRoute,
  LogoutRoute: LogoutRoute,
  PrivacyPolicyRoute: PrivacyPolicyRoute,
  RegisterRoute: RegisterRoute,
  SignupRoute: SignupRoute,
  TermsOfUseRoute: TermsOfUseRoute,
  AuthLoginRoute: AuthLoginRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiTrpcSplatServerRoute: ApiTrpcSplatServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
